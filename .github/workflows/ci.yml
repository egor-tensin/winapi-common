name: CI

on:
  push:
  pull_request:
  schedule:
    # Weekly, at 5:30 AM on Sunday (somewhat randomly chosen).
    - cron: '30 5 * * 0'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-18.04
    name: Linting
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Run clang-format
        run: ./cmake/tools/clang-format.py --clang-format clang-format-9

  build:
    strategy:
      matrix:
        # MinGW builds are done on Linux, since it's more up-to-date there, and
        # it's much faster.
        os: [ubuntu-20.04, windows-2016, windows-2019]
        platform: [x64, x86]
        configuration: [Debug, RelWithDebInfo]
        include:
          - {os: windows-2016, toolset: msvc}
          - {os: windows-2019, toolset: msvc}
          - {os: ubuntu-20.04, toolset: mingw}
    runs-on: '${{ matrix.os }}'
    name: 'Build: ${{ matrix.os }} / ${{ matrix.toolset }} / ${{ matrix.platform }} / ${{ matrix.configuration }}'
    env:
      TOOLSET: '${{ matrix.toolset }}'
      PLATFORM: '${{ matrix.platform }}'
      CONFIGURATION: '${{ matrix.configuration }}'
      BOOST_VERSION: 1.65.0
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: '${{ matrix.platform }}'
        if: matrix.toolset == 'mingw'
      - name: Build Boost
        run: |
          cd cmake
          python -m project.ci.boost -- --with-test
      - name: Build
        run: |
          cd cmake
          $flags = if ('${{ matrix.toolset }}' -eq 'msvc') {
              '--','-D','WINAPI_COMMON_TESTS=ON'
          } else {
              @()
          }
          python -m project.ci.cmake --install $flags
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: 'winapi-common-${{ matrix.os }}-${{ matrix.toolset }}-${{ matrix.platform }}-${{ matrix.configuration }}'
          path: '${{ runner.workspace }}/build/install/'
      - name: Make test logs directory
        run: mkdir ../test_logs
        if: runner.os == 'Windows'
      - name: Run unit tests (w/o console tests)
        run: |
          $args = @(
              '--log_level=all',
              '--log_sink=..\test_logs\tests.log',
              '--report_sink=..\test_logs\report.txt',
              '--run_test=!console_tests,process_console_tests',
              '--',
              '--echo_exe=..\build\install\bin\winapi-common-test-echo.exe',
              '--worker_exe=..\build\install\bin\winapi-common-test-worker.exe'
          )
          ..\build\install\bin\winapi-common-unit-tests.exe $args
        if: runner.os == 'Windows'
      - name: Check test report (w/o console tests)
        run: |
          cat ..\test_logs\report.txt
          $last_line = Get-Content ..\test_logs\report.txt -Tail 1
          $($last_line -eq '*** No errors detected') -or $(throw $last_line)
        if: runner.os == 'Windows'
      - name: Run unit tests (console tests)
        run: |
          $args = @(
              '--log_level=all',
              '--log_sink=..\test_logs\tests_console.log',
              '--report_sink=..\test_logs\report_console.txt',
              '--run_test=console_tests,process_console_tests',
              '--',
              '--echo_exe=..\build\install\bin\winapi-common-test-echo.exe',
              '--worker_exe=..\build\install\bin\winapi-common-test-worker.exe'
          )
          Start-Process `
              -FilePath ..\build\install\bin\winapi-common-unit-tests.exe `
              -ArgumentList $args `
              -Wait
        if: runner.os == 'Windows'
      - name: Check test report (console tests)
        run: |
          cat ..\test_logs\report_console.txt
          $last_line = Get-Content ..\test_logs\report_console.txt -Tail 1
          $($last_line -eq '*** No errors detected') -or $(throw $last_line)
        if: runner.os == 'Windows'
      - name: Upload test logs
        uses: actions/upload-artifact@v2
        with:
          name: 'test_logs-${{ matrix.os }}-${{ matrix.platform }}-${{ matrix.configuration }}'
          path: '${{ runner.workspace }}/test_logs/'
        if: always() && runner.os == 'Windows'
